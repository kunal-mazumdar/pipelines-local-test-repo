resources:
  - name: signed_git_1
    type: GitRepo
    configuration:
      gitProvider: kunal_gh
      path: kunal-mazumdar/pipelines-local-test-repo
      branches:
        include: {{ gitBranch }}
  - name: signed_buildinfo_2
    type: BuildInfo
    configuration:
      sourceArtifactory: jpat
 
pipelines:
  - name: test_signed_start_2
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: create_with_buildinfo
        type: Bash
        configuration:
          inputResources:
            - name: signed_git_1
          integrations:
            - name: int_default_artifactory
          outputResources:
            - name: signed_buildinfo_2
        execution:
          onExecute:
            - cd $res_signed_git_1_resourcePath
            - echo '12345' > server_${run_id}.js
            - jfrog rt upload server_${run_id}.js km-generic-local --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - echo '6789' > dependency_${run_id}.js
            - jfrog rt upload dependency_${run_id}.js km-generic-local --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - jf rt bad $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER "km-generic-local/dependency_${run_id}.js" --from-rt
            - jf rt bce $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - jfrog rt build-publish --detailed-summary $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER > summaryOutput.json            
            - save_artifact_info 'buildInfo' './summaryOutput.json' --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - write_output signed_buildinfo_2 "buildName=$JFROG_CLI_BUILD_NAME"
            - write_output signed_buildinfo_2 "buildNumber=$JFROG_CLI_BUILD_NUMBER"
      
      # - name: create_with_buildinfo_matrix
      #   type: Matrix
      #   stepletMultipliers:
      #     environmentVariables:
      #       - id: 1
      #       - id: 2
      #   configuration:
      #     inputSteps:
      #       - name: create_with_buildinfo          
      #     inputResources:
      #       - name: signed_git_1
      #     integrations:
      #       - name: int_default_artifactory
      #     outputResources:
      #       - name: signed_buildinfo_2
      #   execution:
      #     onExecute:
      #       - cd $res_signed_git_1_resourcePath
      #       - touch server_${steplet_id}.js
      #       - jfrog rt upload server_${steplet_id}.js km-generic-local
      #       - jfrog rt build-publish --detailed-summary $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER > summaryOutput.json
      #       - save_artifact_info 'buildInfo' './summaryOutput.json' --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
      #       - write_output signed_buildinfo_2 "buildName=$JFROG_CLI_BUILD_NAME"
      #       - write_output signed_buildinfo_2 "buildNumber=$JFROG_CLI_BUILD_NUMBER"
      

      # - name: create_only_artifact
      #   type: Bash
      #   configuration:
      #     inputSteps:
      #       - name: create_with_buildinfo
      #     inputResources:
      #       - name: signed_git_1
      #     integrations:
      #       - name: int_default_artifactory
      #   execution:
      #     onExecute:
      #       - cd $res_signed_git_1_resourcePath
      #       - touch server1.js
      #       - jfrog rt upload server1.js km-generic-local --detailed-summary > summaryOutput.json
      #       - save_artifact_info 'file' './summaryOutput.json'

      # - name: create_with_release_bundle
      #   type: Bash
      #   configuration:
      #     inputSteps:
      #       - name: create_only_artifact
      #     inputResources:
      #       - name: signed_git_1
      #     integrations:
      #       - name: int_default_artifactory
      #   execution:
      #     onExecute:
      #       - cd $res_signed_git_1_resourcePath
      #       - |
      #         echo '{ "files": [ { "aql": { "items.find": { "repo": { "$eq": "km-generic-local" } } } } ] }' > spec.json
      #       - jf rt s --spec=spec.json
      #       - jf ds rbc --spec=spec.json kunal_test_rb_${run_id} 1.0.0 --sign --detailed-summary > summaryOutput.json
      #       - save_artifact_info 'releaseBundle' './summaryOutput.json' --release-bundle-name kunal_test_rb_${run_id} --release-bundle-version 1.0.0
            
      # - name: print_info
      #   type: Bash
      #   configuration:
      #     inputSteps:
      #       - name: create_with_release_bundle
      #   execution:
      #     onExecute:
      #       - validate_artifact buildInfo --build-name $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
