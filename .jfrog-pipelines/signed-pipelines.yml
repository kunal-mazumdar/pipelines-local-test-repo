resources:
  - name: git_repo
    type: GitRepo
    configuration:
      gitProvider: kunal_gh
      path: kunal-mazumdar/pipelines-local-test-repo
      branches:
        include: '{{ gitBranch }}'
  - name: buildInfo
    type: BuildInfo
    configuration:
      sourceArtifactory: int_default_artifactory
pipelines:
  - name: signed_pipelines_docker
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: build_push
        type: Bash
        configuration:
          inputResources:
            - name: git_repo
          integrations:
            - name: int_default_artifactory
          outputResources:
            - name: buildInfo
        execution:
          onExecute:
            - echo $res_git_repo_resourcePath
            - export IN_resourceName=git_repo
            - export IN_dockerImage=docker-local/jfrog/pipelines-msg:1.0.0
            - export IN_dockerFileName=Dockerfile
            - export IN_autoPublishBuildInfo='true'
            - export IN_xrayScan=false
            - export IN_failOnScan=true
            - export IN_outputBuildInfoResourceName=buildInfo
            - cd $res_git_repo_resourcePath
            - ls -al
            - ./docker-build.sh
            - ./docker-push.sh

  - name: signed_pipelines_manual
    configuration:
      jfrogCliVersion: 2
    steps:
      - name: create_with_buildinfo
        type: Bash
        configuration:
          inputResources:
            - name: git_repo
          integrations:
            - name: int_default_artifactory
          outputResources:
            - name: buildInfo
        execution:
          onExecute:
            - cd $res_git_repo_resourcePath
            - 'echo ''12345'' > server_${run_id}.js'
            - >-
              jfrog rt upload server_${run_id}.js km-generic-local --build-name
              $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - 'echo ''6789'' > dependency_${run_id}.js'
            - >-
              jfrog rt upload dependency_${run_id}.js km-generic-local
              --build-name $JFROG_CLI_BUILD_NAME --build-number
              $JFROG_CLI_BUILD_NUMBER
            - >-
              jf rt bad $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
              "km-generic-local/dependency_${run_id}.js" --from-rt
            - jf rt bce $JFROG_CLI_BUILD_NAME $JFROG_CLI_BUILD_NUMBER
            - >-
              jfrog rt build-publish --detailed-summary $JFROG_CLI_BUILD_NAME
              $JFROG_CLI_BUILD_NUMBER > summaryOutput.json
            - >-
              save_artifact_info 'buildInfo' './summaryOutput.json' --build-name
              $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - write_output buildInfo "buildName=$JFROG_CLI_BUILD_NAME"
            - write_output buildInfo "buildNumber=$JFROG_CLI_BUILD_NUMBER"
      - name: create_with_buildinfo_matrix
        type: Matrix
        stepletMultipliers:
          environmentVariables:
            - id: 1
            - id: 2
        configuration:
          inputSteps:
            - name: create_with_buildinfo
          inputResources:
            - name: git_repo
          integrations:
            - name: int_default_artifactory
          outputResources:
            - name: buildInfo
        execution:
          onExecute:
            - cd $res_git_repo_resourcePath
            - 'touch server_${steplet_id}.js'
            - 'jfrog rt upload server_${steplet_id}.js km-generic-local'
            - >-
              jfrog rt build-publish --detailed-summary $JFROG_CLI_BUILD_NAME
              $JFROG_CLI_BUILD_NUMBER > summaryOutput.json
            - >-
              save_artifact_info 'buildInfo' './summaryOutput.json' --build-name
              $JFROG_CLI_BUILD_NAME --build-number $JFROG_CLI_BUILD_NUMBER
            - write_output buildInfo "buildName=$JFROG_CLI_BUILD_NAME"
            - write_output buildInfo "buildNumber=$JFROG_CLI_BUILD_NUMBER"
      - name: create_only_artifact
        type: Bash
        configuration:
          inputSteps:
            - name: create_with_buildinfo
          inputResources:
            - name: git_repo
          integrations:
            - name: int_default_artifactory
        execution:
          onExecute:
            - cd $res_git_repo_resourcePath
            - touch server1.js
            - >-
              jfrog rt upload server1.js km-generic-local --detailed-summary >
              summaryOutput.json
            - save_artifact_info 'file' './summaryOutput.json'
      - name: create_with_release_bundle
        type: Bash
        configuration:
          inputSteps:
            - name: create_only_artifact
          inputResources:
            - name: git_repo
          integrations:
            - name: int_default_artifactory
        execution:
          onExecute:
            - cd $res_git_repo_resourcePath
            - >
              echo '{ "files": [ { "aql": { "items.find": { "repo": { "$eq":
              "km-generic-local" } } } } ] }' > spec.json
            - jf rt s --spec=spec.json
            - >-
              jf ds rbc --spec=spec.json kunal_test_rb_${run_id} 1.0.0 --sign
              --detailed-summary > summaryOutput.json
            - >-
              save_artifact_info 'releaseBundle' './summaryOutput.json'
              --release-bundle-name kunal_test_rb_${run_id}
              --release-bundle-version 1.0.0
      - name: validate_artifact
        type: Bash
        configuration:
          inputSteps:
            - name: create_with_release_bundle
        execution:
          onExecute:
            - >-
              validate_artifact buildInfo --build-name $JFROG_CLI_BUILD_NAME
              --build-number $JFROG_CLI_BUILD_NUMBER
